(in-package :wild-engine.math)

(defun v2->v3 (v2 &optional (default 1f0))
  (v3:make (aref v2 0)
	   (aref v2 1)
	   default))

(defun v3->v4 (v3 &optional (default 1f0))
  (v4:make (aref v3 0)
	   (aref v3 1)
	   (aref v3 2)
	   default))

(defun make-v2 (x y)
  (declare (optimize (speed 3) (safety 1)))
  (v2:make (we.u:to-single-float x)
	   (we.u:to-single-float y)))

(defun make-v3 (x y z)
  (declare (optimize (speed 3) (safety 1)))
  (v3:make (we.u:to-single-float x)
	   (we.u:to-single-float y)
	   (we.u:to-single-float z)))

(defun make-v4 (x y z w)
  (declare (optimize (speed 3) (safety 1)))
  (v4:make (we.u:to-single-float x)
	   (we.u:to-single-float y)
	   (we.u:to-single-float z)
	   (we.u:to-single-float w)))

(defun make-m2 (a b c d)
  (declare (optimize (speed 3) (safety 1)))
  (m2:make (we.u:to-single-float a)
	   (we.u:to-single-float b)
	   (we.u:to-single-float c)
	   (we.u:to-single-float d)))

(defun make-m3 (a b c d e f g h i)
  (declare (optimize (speed 3) (safety 1)))
  (m3:make (we.u:to-single-float a)
	   (we.u:to-single-float b)
	   (we.u:to-single-float c)
	   (we.u:to-single-float d)
	   (we.u:to-single-float e)
	   (we.u:to-single-float f)
	   (we.u:to-single-float g)
	   (we.u:to-single-float h)
	   (we.u:to-single-float i)))

(defun make-m4 (a b c d e f g h i j k l m n o p)
  (declare (optimize (speed 3) (safety 1)))
  (m4:make (we.u:to-single-float a)
	   (we.u:to-single-float b)
	   (we.u:to-single-float c)
	   (we.u:to-single-float d)
	   (we.u:to-single-float e)
	   (we.u:to-single-float f)
	   (we.u:to-single-float g)
	   (we.u:to-single-float h)
	   (we.u:to-single-float i)
	   (we.u:to-single-float j)
	   (we.u:to-single-float k)
	   (we.u:to-single-float l)
	   (we.u:to-single-float m)
	   (we.u:to-single-float n)
	   (we.u:to-single-float o)
	   (we.u:to-single-float p)))

(defun v*adjoint (v)
  (let ((x (aref v 0))
	(y (aref v 1))
	(z (aref v 2)))
    (m3:make (* x x) (* x y) (* x z)
	     (* y x) (* y y) (* y z)
	     (* z x) (* z y) (* z z))))

(defun m3->m4 (m3)
  (let ((a (aref m3 0))
	(e (aref m3 1))
	(h (aref m3 2))
	(b (aref m3 3))
	(f (aref m3 4))
	(i (aref m3 5))
	(c (aref m3 6))
	(g (aref m3 7))
	(j (aref m3 8)))
    (make-m4 a b c 0
	     e f g 0
	     h i j 0
	     0 0 0 1)))
